{
    "openapi": "3.0.0",
    "info": {
        "title": "ðŸŽ¶ MusicBoxAPI",
        "description": "API RESTful pour la gestion des artistes, albums et chansons.\n *                   Cette API permet de gÃ©rer les ressources principales :\n *                   - Artistes\n *                   - Albums\n *                   - Chansons\n *                   Elle inclut des fonctionnalitÃ©s de recherche, pagination et filtres.",
        "contact": {
            "name": "MusicBox API Team",
            "email": "support@musicboxapi.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/albums": {
            "get": {
                "tags": [
                    "Albums"
                ],
                "summary": "Get list of albums with pagination",
                "operationId": "735609843dcfb89ee4e12e340eddca25",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of albums",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Album"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Albums"
                ],
                "summary": "Create a new album",
                "operationId": "2252aa8fd63b7d2fa1203c1735943d46",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "artist_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Discovery"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2001
                                    },
                                    "artist_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Album created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Album"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/albums/{id}": {
            "get": {
                "tags": [
                    "Albums"
                ],
                "summary": "Get a single album with its songs",
                "operationId": "71e9c4179582355e89419e6f6994c418",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the album",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Album"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Album not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Albums"
                ],
                "summary": "Update an album",
                "operationId": "1300ec85cc590b1ae1468c9bf8db122d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the album to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Random Access Memories"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2013
                                    },
                                    "artist_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Album updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Album"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Album not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Albums"
                ],
                "summary": "Delete an album",
                "operationId": "cabfc7c152115607d310827d46a82d5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the album to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Album deleted successfully"
                    },
                    "404": {
                        "description": "Album not found"
                    }
                }
            }
        },
        "/api/artists": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Get list of artists with pagination and optional genre filter",
                "operationId": "2c8aed1387cca1c65d98da7ee11ac926",
                "parameters": [
                    {
                        "name": "genre",
                        "in": "query",
                        "description": "Filter artists by genre (optional)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Rock"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Artist"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Artists"
                ],
                "summary": "Create a new artist",
                "operationId": "83d2888bdc6fac66b9a7cc81c4c950fb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Daft Punk"
                                    },
                                    "genre": {
                                        "type": "string",
                                        "example": "Electronic"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "France"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Artist created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artist"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/artists/{id}": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Get a single artist with albums and songs",
                "operationId": "d0b68c06b8bc310fbe24c6d3ea80dac3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artist"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Artists"
                ],
                "summary": "Update an existing artist",
                "operationId": "5a5632ea389f9a05336f8d035f5a44c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Coldplay"
                                    },
                                    "genre": {
                                        "type": "string",
                                        "example": "Pop Rock"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "UK"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Artist updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Artist"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Artists"
                ],
                "summary": "Delete an artist",
                "operationId": "4f6d8bd2c8b4b738af7589b72348ac20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the artist to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist deleted successfully"
                    },
                    "404": {
                        "description": "Artist not found"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user and get API token",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and revoke current token",
                "operationId": "0ab4e3cf7bc4f7ec81b48f7928c7de7c",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password using token",
                "operationId": "52bc2993b4dfd7d7d28bcb315512ae14",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-123"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newsecret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newsecret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Your password has been reset!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/password/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link to user email",
                "operationId": "d98225e15795870ca973327ac1ed1006",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user and get API token",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/songs": {
            "get": {
                "tags": [
                    "Songs"
                ],
                "summary": "Get list of songs with pagination",
                "operationId": "0388bb28c35eec49b8b492d169ce3575",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of songs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Song"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Songs"
                ],
                "summary": "Create a new song",
                "operationId": "2f1970b82d91cc715578d972189f19cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "album_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Harder, Better, Faster, Stronger"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 225
                                    },
                                    "album_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Song created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/songs/{id}": {
            "get": {
                "tags": [
                    "Songs"
                ],
                "summary": "Get a single song with album and artist",
                "operationId": "4325a96361d1d3820cc0580eaae9197c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the song",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Song not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Songs"
                ],
                "summary": "Update a song",
                "operationId": "452de7f8f11a121cd11e9430565632c3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the song to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "One More Time"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 320
                                    },
                                    "album_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Song updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Song"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Song not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Songs"
                ],
                "summary": "Delete a song",
                "operationId": "829c1a52ae5013ce3ff4b9829a31485f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the song to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song deleted successfully"
                    },
                    "404": {
                        "description": "Song not found"
                    }
                }
            }
        },
        "/api/songs/search": {
            "get": {
                "tags": [
                    "Songs"
                ],
                "summary": "Search songs by title or artist name",
                "operationId": "e1a974ad7df9d6985c4b5a8084fb042f",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query (title or artist name)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Daft Punk"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Song"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Album": {
                "title": "Album",
                "description": "Album model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 10
                    },
                    "title": {
                        "type": "string",
                        "example": "Discovery"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2001
                    },
                    "artist_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "songs": {
                        "description": "Songs in the album",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Song"
                        }
                    }
                },
                "type": "object"
            },
            "Artist": {
                "title": "Artist",
                "description": "Artist model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Daft Punk"
                    },
                    "genre": {
                        "type": "string",
                        "example": "Electronic"
                    },
                    "country": {
                        "type": "string",
                        "example": "France"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-30T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-30T12:30:00Z"
                    },
                    "albums": {
                        "description": "List of albums for the artist",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Album"
                        }
                    }
                },
                "type": "object"
            },
            "Song": {
                "title": "Song",
                "description": "Song model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 100
                    },
                    "title": {
                        "type": "string",
                        "example": "Harder, Better, Faster, Stronger"
                    },
                    "duration": {
                        "type": "string",
                        "example": "03:45"
                    },
                    "album_id": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "API Token",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Albums",
            "description": "Albums"
        },
        {
            "name": "Artists",
            "description": "Artists"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Songs",
            "description": "Songs"
        }
    ]
}